package izumi.test.domain02

import izumi.test.domain01

include "model01.model"
include "model02.model"

alias RTestEnum = izumi.test.domain01#RTestEnum

mixin TestInterface1 {
  if1Field_overriden: i32
  if1Field_inherited: i32
  sameField: i64
  sameEverywhereField: i64

  fromOtherDomain: izumi.test.domain01#TestValIdentifier
}

mixin TestInterface2 {
  if2Field: i64
  sameField: i64
  sameEverywhereField: i64
}

mixin TestInterface3 {
  & TestInterface1

  if1Field_overriden: i32
  if3Field: i64
  sameEverywhereField: i64
}

data DTO1 {
  & TestInterface2
  & TestInterface3
}


mixin Pair1 {
  x: str
  y: string
}

mixin Pair2 {
  y: str
  x: str
}

data TestDataWithAlias {
  a: RTestEnum
}

alias AliasedTestObject = izumi.test.domain01#TestObject
alias AliasedGoAliasEnumTest = izumi.test.domain01#GoAliasEnumTest
data AliasedUsageData {
    testObj: AliasedTestObject
    enum: AliasedGoAliasEnumTest
}

alias RTestObject1 = izumi.test.domain01#RTestObject1
alias AnyValTest2 = izumi.test.domain01#AnyValTest2

service TestAliasServ {
    def getMassCoupons(iterator: opt[RTestObject1]) => i32
    def ifaceMethod(va: AnyValTest2) => i32
}