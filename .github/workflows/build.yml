name: Build

on:
  push:
    branches: [ "develop" ]
    tags: [ "v**" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11', '17' ]
        scala: [ '2.12', '2.13', '3']
    steps:
      - uses: 7mind/github-env@main
        with:
          java-version: ${{ matrix.java }}
      - name: Build and Test
        continue-on-error: ${{ matrix.scala == '3' }}
        run: |
          bash sbtgen.sc --js
          bash .build.sh ${{ matrix.scala }} coverage
      - uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          path: reports/TEST-*.xml    # Path to test results
          reporter: java-junit
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.TOKEN_CODECOV }} # not required for public repos
          verbose: true # optional (default = false)
          fail_ci_if_error: true
          files: cobertura.xml
          # TODO: do we need scoverage.xml? If so files: may be just omitted
          # files: cobertura.xml,scoverage.xml
          # flags: unittests
  test-site:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
        scala: [ '2.13']
    steps:
      - uses: 7mind/github-env@main
        with:
          java-version: ${{ matrix.java }}
      - name: Build Microsite
        run: |
          bash sbtgen.sc --js 
          bash .build.sh ${{ matrix.scala }} site-test
  checksecret:
    runs-on: ubuntu-latest
    outputs:
      HAVE_SECRETS: ${{ steps.checksecret_job.outputs.HAVE_SECRETS }}
    steps:
      - id: checksecret_job
        env:
          OPENSSL_IV: ${{ secrets.OPENSSL_IV }}
          OPENSSL_KEY: ${{ secrets.OPENSSL_KEY }}
        run: |
          echo "HAVE_SECRETS=${{ env.OPENSSL_IV != '' && env.OPENSSL_KEY != '' }}" >> $GITHUB_OUTPUT
  publish-site:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
        scala: [ '2.13']
    needs: [ 'build', 'test-site', 'checksecret' ]
    if: needs.checksecret.outputs.HAVE_SECRETS == 'true'
    steps:
      - uses: 7mind/github-env@main
        with:
          java-version: ${{ matrix.java }}
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.IZUMI_MICROSITE_KEY }}
          known_hosts: 'unnecessary' # github.com is already there
      - name: Publish Microsite
        run: |
          bash sbtgen.sc --js 
          bash .build.sh ${{ matrix.scala }} site-publish
  publish-artifacts:
    runs-on: ubuntu-latest
    needs: [ 'build', 'checksecret' ]
    if: needs.checksecret.outputs.HAVE_SECRETS == 'true'
    strategy:
      matrix:
        java: [ '11' ]
        scala: [ '2.12', '2.13', '3']
    steps:
      - uses: 7mind/github-env@main
        with:
          java-version: ${{ matrix.java }}
      - name: Build and Publish to Sonatype
        env:
          OPENSSL_IV: ${{ secrets.OPENSSL_IV }}
          OPENSSL_KEY: ${{ secrets.OPENSSL_KEY }}
        run: |
          bash sbtgen.sc --js
          bash .build.sh ${{ matrix.scala }} secrets publishScala